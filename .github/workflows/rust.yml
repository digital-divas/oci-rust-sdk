name: Rust

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Grcov
        run: cargo install grcov
      - name: Install llvm-tools
        run: rustup component add llvm-tools-preview
      - name: Run OCI Emulator
        run: docker run -d --name oci-emulator -p 12000:12000 cameritelabs/oci-emulator:latest
      - name: Run tests and generate coverage report
        run: |
          export RUSTFLAGS="-Cinstrument-coverage"
          export LLVM_PROFILE_FILE="oci_rust_sdk-%p-%m.profraw"
          cargo build --verbose
          cargo test --verbose
          if [ -z "${{ secrets.COVERALLS_TOKEN }}" ]
          then
            echo "no need to generate coverage report"
          else
            grcov . --binary-path ./target/debug/ -t coveralls -s . --token ${{ secrets.COVERALLS_TOKEN }} --ignore-not-existing --ignore "/*" > coveralls.json
            curl -X POST -F "json_file=@coveralls.json" https://coveralls.io/api/v1/jobs
          fi

  build_publish:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_TOKEN }}
